@use 'mixins';

// Dark
$dark-foreground: #fff;
$dark-background: #000;
$dark-background-two: #111;
$dark-background-three: #222;
$dark-background-four: #333;
$dark-primary-colour: #eb5757;
$dark-primary-colour-two: #9d2727; // generated from hsla(0, 60%, 48%, .65) on black bg
$dark-primary-colour-three: #531515; // generated from hsla(0, 60%, 45%, .45) on black bg
$dark-image-overlay: linear-gradient(rgba(0, 0, 0, 0.85), rgba(0, 0, 0, 0.65));

// Light
$light-foreground: #000;
$light-background: #fff;
$light-background-two: #f3f3f3;
$light-background-three: #ebebeb;
$light-background-four: #D9D9D9;
$light-primary-colour: #eb5757;
$light-primary-colour-two: #f98e8e;
$light-primary-colour-three: #ffc3c3;
$light-image-overlay: linear-gradient(rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.85));

// Spacing & Guides
$decoration-height: 0.5rem;
$main-border-radius: 0.75rem;
$small-border-radius: 0.25rem;

:root {
    @include mixins.light {
        --foreground: #{$light-foreground};
        --background: #{$light-background};
        --background-two: #{$light-background-two};
        --background-three: #{$light-background-three};
        --background-four: #{$light-background-four};
        --primary-colour: #{$light-primary-colour};
        --primary-colour-two: #{$light-primary-colour-two};
        --primary-colour-three: #{$light-primary-colour-three};
        --image-overlay: #{$light-image-overlay};
    }
    @include mixins.dark {
        --foreground: #{$dark-foreground};
        --background: #{$dark-background};
        --background-two: #{$dark-background-two};
        --background-three: #{$dark-background-three};
        --background-four: #{$dark-background-four};
        --primary-colour: #{$dark-primary-colour};
        --primary-colour-two: #{$dark-primary-colour-two};
        --primary-colour-three: #{$dark-primary-colour-three};
        --image-overlay: #{$dark-image-overlay};
    }

    // spacing along side of the page, changing depending on mobile or desktop using clamp
    --side-spacing: clamp(1rem, 4vw, 5rem);

    // content-box-size - this variable controls how wide the content box is, on a 4k display for example, it should not fill the full width
    // --content-box-size: clamp(100vw, auto, calc(100vw - 25%));
    // --content-box-size: clamp(calc(100vw - 5rem), auto , 50vw);
    --content-box-size: max(50vw, calc(70%));
}
